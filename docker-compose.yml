name: docker-django-example #Project-Name
services:
  web:
    image: ${IMAGE_NAME}:${WEB_TAG}
    build: . 
    container_name: ${APP_NAME}-app
    command: ["python", "manage.py", "runserver", "0.0.0.0:8000"]
    develop:
      watch:
        - action: rebuild
          path: ./requirements.txt
        - action: sync
          path: .
          target: /code
          ignore:
            - README.md
            - .gitignore
    ports:
      - ${WEB_PORT}:8000
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy        
    logging:
        driver: "json-file"
        options:
            max-file: 10
            max-size: 50m     
    networks:
      - ${APP_NAME}            
      
  db:
    image: postgres:16.2-alpine3.19
    container_name: ${APP_NAME}-db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - ${DB_PORT}:5432
    env_file:
      - ./.env.db
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}'"]
      interval: 10s
      timeout: 3s
      retries: 3     
    networks:
      - ${APP_NAME}       
  redis:
    container_name: ${APP_NAME}-redis
    image: "redis:alpine"
    ports:
      - ${REDIS_PORT}:6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5      
    volumes: 
      - cache:/data 
    networks:
      - ${APP_NAME}           
  # celery:
  #   image: ${IMAGE_NAME}:${WEB_TAG}
  #   container_name: celery-app
  #   command: celery -A celery-app worker -l info --concurrency=1
    # develop:
    #   watch:
    #     - action: sync
    #       path: .
    #       target: /code
  #   env_file:
  #     - ./.env
  #   depends_on:
  #     - db
  #     - redis
    # logging:
    #     driver: "json-file"
    #     options:
    #         max-file: 10
    #         max-size: 50m  
    # networks:
    #   - ${APP_NAME}    
volumes:
  postgres_data:
  cache:
networks:
  ${APP_NAME}:
    driver: bridge  
